<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.healthyFoodMapper">

	<!-- ID로 회원 정보를 조회하는 쿼리 -->
	<select id = "selectMemberById" 
			parameterType = "String" 
			resultType = "com.javateam.healthyFoodProject.domain.MemberVO">
		SELECT * 
		  FROM USER_TBL
 		 WHERE ID = #{id}
	</select>

	<!-- 특정 필드에 대한 회원 중복 체크 쿼리 -->
	<select id = "hasMemberByFld" parameterType = "map" resultType = "int">
		SELECT COUNT(*)
		  FROM USER_TBL
		 WHERE ${fld} = #{val}
	
	</select>
	
	<!-- 회원정보 삽입(생성) -->
	<insert id = "insertMember" parameterType = "com.javateam.healthyFoodProject.domain.MemberVO">
		INSERT INTO USER_TBL(
                           NUM,   ID,    PW,       NAME,     GENDER,
                           EMAIL, PHONE, BIRTHDAY, JOINDATE, ENABLED
	                       )
	                VALUES(
	   	  	               USER_NUM_SEQ.NEXTVAL, #{id},    #{pw},       #{name},  #{gender}, 
	   	  	               #{email},             #{phone}, #{birthday}, SYSDATE,  #{enabled}
	                       )
	</insert>
	
	<!-- 회원정보 수정 -->
	<update id = "updateMember" parameterType = "com.javateam.healthyFoodProject.domain.MemberVO">
		UPDATE USER_TBL
		<set>
			<if test = "pw != null">
				PW = #{pw}		
			</if>
			<if test = "email != null">
				,EMAIL = #{email}		
			</if>
			<if test = "phone != null">
				,PHONE = #{phone}		
			</if>
		</set>
		WHERE ID = #{id}
	
	</update>

	<!-- 회원정보 중복 점검(수정) -->
	<select id = "hasMemberForUpdate" parameterType = "map" resultType = "int">
		SELECT COUNT(*)
	  	  FROM (SELECT ${fld}
	  			  FROM USER_TBL
	  			 WHERE ID != #{id})
		 WHERE ${fld} = #{val}
	</select>
	
	<!-- 회원 Role 생성 -->
	<insert id = "insertRole" parameterType = "map">
		INSERT INTO USER_ROLES (User_Role_Num, usernum, userid, role)
						VALUES (USER_ROLES_SEQ.NEXTVAL, #{num,jdbcType=VARCHAR}, #{id,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR})
	</insert>
	
	<!-- 회원 Role 삭제 -->
	<delete id = "deleteRoles" parameterType ="String">
		DELETE FROM USER_ROLES
		 WHERE USERID = #{userid}
	</delete>
	
	<!-- 회원정보 삭제 -->
	<delete id = "deleteMemberById" parameterType = "String">
		DELETE FROM USER_TBL
		 WHERE ID = #{id}
	</delete>
	
	<!-- 회원 Role 조회 -->
	<select id = "selectRolesById" parameterType="String" resultType = "String">
		SELECT ROLE
		  FROM USER_ROLES
		 WHERE USERID = #{id}
	</select>

	<!-- 회원 Role 삭제 -->
	<delete id="deleteRoleById" parameterType="map">
		DELETE FROM USER_ROLES
		 WHERE USERID = #{id}
		   AND ROLE = #{role}
	</delete>

	<!-- 회원 활동/휴면  상태(enabled) 변경 -->
	<update id = "changeEnabled" parameterType="map">
		UPDATE USER_TBL
		   SET ENABLED = #{enabled}
		 WHERE ID = #{id}
	</update>
	
	<!-- 회원정보 조회(role 포함) -->
	<select id = "selectMemberByFld" parameterType = "map" resultType = "map" >
	SELECT DISTINCT m3.* 
         ,(
           SELECT LISTAGG(r2.ROLE, ',') WITHIN GROUP (ORDER BY m2.ID) 
             FROM USER_TBL m2
                 ,USER_ROLES r2  
            WHERE r2.USERID = m2.ID
              AND r2.USERID = m3.ID
            ) AS "ROLE"           
  	  FROM  USER_TBL m3
  	       ,USER_ROLES r3
  	  WHERE m3.ID  = r3.USERID
   	    AND ${fld} = #{val}
	</select>
</mapper>